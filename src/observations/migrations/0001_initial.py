# Generated by Django 4.2.25 on 2025-10-06 19:48

import cloudinary.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ObservingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp indicating when the record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp indicating when the record was last updated.')),
                ('datetime_start_ut', models.DateTimeField(db_index=True, help_text='Enter observing session start time in UTC.')),
                ('datetime_end_ut', models.DateTimeField(blank=True, help_text='Enter observing session end time in UTC (fill-in when session ends).', null=True)),
                ('site_name', models.CharField(blank=True, max_length=50)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Observing Session',
                'verbose_name_plural': 'Observing Sessions',
                'ordering': ['-datetime_start_ut'],
            },
        ),
        migrations.CreateModel(
            name='Star',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp indicating when the record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp indicating when the record was last updated.')),
                ('antoniadi_scale', models.CharField(blank=True, choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V')], help_text='Antoniadi scale rating for atmospheric seeing conditions during observation (I=perfect, V=very poor)', max_length=3)),
                ('telescope_size_type', models.CharField(blank=True, help_text='e.g., "8-inch Newtonian"', max_length=50)),
                ('magnification_used', models.CharField(blank=True, help_text='e.g., "150x"', max_length=25)),
                ('eyepieces_used', models.CharField(blank=True, help_text='e.g., "25mm Plössl"', max_length=25)),
                ('filters_used', models.CharField(blank=True, help_text='e.g., "Moon filter"', max_length=25)),
                ('drawing', cloudinary.models.CloudinaryField(blank=True, help_text='Is North marked on your drawing? This keeps it scientifically useful!', max_length=255, null=True)),
                ('additional_notes', models.TextField(blank=True, help_text='Additional observations, impressions, or details about your session.')),
                ('api_payload', models.JSONField(blank=True, null=True)),
                ('distance_light_years', models.DecimalField(blank=True, decimal_places=1, help_text='Distance to object in light-years.', max_digits=10, null=True)),
                ('distance_miles', models.DecimalField(blank=True, decimal_places=1, help_text='Distance to object in miles', max_digits=25, null=True)),
                ('star_name', models.CharField(db_index=True, help_text='e.g., "Mira"', max_length=200)),
                ('magnitude_estimate', models.DecimalField(blank=True, decimal_places=1, help_text='Visual magnitude estimate: lower numbers = brighter (e.g., Sirius = -1.4, naked eye limit ≈ 6.5, binocular limit ≈ 9.5)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(-1.5), django.core.validators.MaxValueValidator(15.0)])),
                ('finder_chart_used', models.CharField(blank=True, help_text='Finder chart details: e.g., "AAVSO chart 15424 ABC" (for variable stars, optional with other types of stars)', max_length=200)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_observations', to='observations.observingsession')),
            ],
            options={
                'verbose_name': 'Star Observation',
                'verbose_name_plural': 'Star Observations',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpecialEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp indicating when the record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp indicating when the record was last updated.')),
                ('antoniadi_scale', models.CharField(blank=True, choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V')], help_text='Antoniadi scale rating for atmospheric seeing conditions during observation (I=perfect, V=very poor)', max_length=3)),
                ('telescope_size_type', models.CharField(blank=True, help_text='e.g., "8-inch Newtonian"', max_length=50)),
                ('magnification_used', models.CharField(blank=True, help_text='e.g., "150x"', max_length=25)),
                ('eyepieces_used', models.CharField(blank=True, help_text='e.g., "25mm Plössl"', max_length=25)),
                ('filters_used', models.CharField(blank=True, help_text='e.g., "Moon filter"', max_length=25)),
                ('drawing', cloudinary.models.CloudinaryField(blank=True, help_text='Is North marked on your drawing? This keeps it scientifically useful!', max_length=255, null=True)),
                ('additional_notes', models.TextField(blank=True, help_text='Additional observations, impressions, or details about your session.')),
                ('event_type', models.CharField(choices=[('comet', 'Comet'), ('meteor_shower', 'Meteor Shower'), ('solar_eclipse', 'Solar Eclipse'), ('lunar_eclipse', 'Lunar Eclipse'), ('aurora', 'Aurora'), ('other', 'Other Special Event')], db_index=True, help_text='Type of special astronomical event?', max_length=20)),
                ('event_name', models.CharField(blank=True, help_text='Event name: e.g. "Comet NEOWISE"', max_length=200)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_observations', to='observations.observingsession')),
            ],
            options={
                'verbose_name': 'Special Event Observation',
                'verbose_name_plural': 'Special Event Observations',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SolarSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp indicating when the record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp indicating when the record was last updated.')),
                ('antoniadi_scale', models.CharField(blank=True, choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V')], help_text='Antoniadi scale rating for atmospheric seeing conditions during observation (I=perfect, V=very poor)', max_length=3)),
                ('telescope_size_type', models.CharField(blank=True, help_text='e.g., "8-inch Newtonian"', max_length=50)),
                ('magnification_used', models.CharField(blank=True, help_text='e.g., "150x"', max_length=25)),
                ('eyepieces_used', models.CharField(blank=True, help_text='e.g., "25mm Plössl"', max_length=25)),
                ('filters_used', models.CharField(blank=True, help_text='e.g., "Moon filter"', max_length=25)),
                ('drawing', cloudinary.models.CloudinaryField(blank=True, help_text='Is North marked on your drawing? This keeps it scientifically useful!', max_length=255, null=True)),
                ('additional_notes', models.TextField(blank=True, help_text='Additional observations, impressions, or details about your session.')),
                ('api_payload', models.JSONField(blank=True, null=True)),
                ('distance_light_years', models.DecimalField(blank=True, decimal_places=1, help_text='Distance to object in light-years.', max_digits=10, null=True)),
                ('distance_miles', models.DecimalField(blank=True, decimal_places=1, help_text='Distance to object in miles', max_digits=25, null=True)),
                ('celestial_body', models.CharField(choices=[('sun', 'Sun'), ('moon', 'Moon'), ('mercury', 'Mercury'), ('venus', 'Venus'), ('mars', 'Mars'), ('jupiter', 'Jupiter'), ('saturn', 'Saturn'), ('uranus', 'Uranus'), ('neptune', 'Neptune'), ('other', 'Other')], db_index=True, max_length=25)),
                ('altitude_degrees', models.PositiveIntegerField(blank=True, help_text="Object's altitude above horizon in degrees (grab from your astronomy app).", null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(90)])),
                ('central_meridian_deg', models.DecimalField(blank=True, decimal_places=2, help_text='Central meridian longitude - which part of the planet is facing Earth (grab from your astronomy app).', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(359.99)])),
                ('phase_fraction', models.DecimalField(blank=True, decimal_places=2, help_text="How much of planet's disk is lit (grab from your astronomy app).", max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('disk_diameter_arcsec', models.DecimalField(blank=True, decimal_places=2, help_text='How big the planet appeared in arcseconds (grab from your astronomy app).', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_observations', to='observations.observingsession')),
            ],
            options={
                'verbose_name': 'Solar System Observation',
                'verbose_name_plural': 'Solar System Observations',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeepSky',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp indicating when the record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp indicating when the record was last updated.')),
                ('antoniadi_scale', models.CharField(blank=True, choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V')], help_text='Antoniadi scale rating for atmospheric seeing conditions during observation (I=perfect, V=very poor)', max_length=3)),
                ('telescope_size_type', models.CharField(blank=True, help_text='e.g., "8-inch Newtonian"', max_length=50)),
                ('magnification_used', models.CharField(blank=True, help_text='e.g., "150x"', max_length=25)),
                ('eyepieces_used', models.CharField(blank=True, help_text='e.g., "25mm Plössl"', max_length=25)),
                ('filters_used', models.CharField(blank=True, help_text='e.g., "Moon filter"', max_length=25)),
                ('drawing', cloudinary.models.CloudinaryField(blank=True, help_text='Is North marked on your drawing? This keeps it scientifically useful!', max_length=255, null=True)),
                ('additional_notes', models.TextField(blank=True, help_text='Additional observations, impressions, or details about your session.')),
                ('api_payload', models.JSONField(blank=True, null=True)),
                ('distance_light_years', models.DecimalField(blank=True, decimal_places=1, help_text='Distance to object in light-years.', max_digits=10, null=True)),
                ('distance_miles', models.DecimalField(blank=True, decimal_places=1, help_text='Distance to object in miles', max_digits=25, null=True)),
                ('object_name', models.CharField(db_index=True, help_text='e.g. "Orion Nebula"', max_length=200)),
                ('visibility_rating', models.CharField(blank=True, choices=[('easy', 'Easy to see'), ('moderate', 'Moderate difficulty'), ('difficult', 'Difficult/faint'), ('invisible', 'Could not see')], help_text='How easy was it to see through your telescope?', max_length=20)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_observations', to='observations.observingsession')),
            ],
            options={
                'verbose_name': 'Deep Sky Observation',
                'verbose_name_plural': 'Deep Sky Observations',
                'abstract': False,
            },
        ),
    ]
